# Defines an image that has the basis for Connect or a User
# Multiple versions of R, Python and Quarto are installed.

FROM ubuntu:24.04 AS base

# Configure apt-get to use the mirror in us-east-1 instead of the Docker default of archive.ubuntu.com
RUN sed -i "s/archive.ubuntu.com/us-east-1.ec2.archive.ubuntu.com/g" /etc/apt/sources.list

ARG DEBIAN_FRONTEND=noninteractive
ARG CONNECT_MANAGER_VERSION=0.5.1
ARG CONNECT_OS=ubuntu22
ARG OS_IDENTIFIER=ubuntu-2204
RUN export TZ=America/New_York

# Install prerequisites
RUN export DEBIAN_FRONTEND=noninteractive && \
    apt-get update && \
    apt-get install -y \
    build-essential \
    curl \
    dnsutils \
    dpkg-sig \
    gawk \
    gfortran \
    git \
    ldap-utils \
    libbz2-dev \
    libcurl4-openssl-dev \
    libdeflate-dev \
    libev-dev \
    libffi-dev \
    liblzma-dev \
    libncurses5-dev \
    libncursesw5-dev \
    libopenblas-dev \
    libpaper-utils \
    libpcre2-dev \
    libreadline-dev \
    libsodium-dev \
    libsqlite3-dev \
    libssl-dev \
    libtinfo5 \
    libxml2-dev \
    libzmq3-dev \
    llvm \
    mailcap \
    make \
    media-types \
    python3-openssl \
    rrdtool \
    software-properties-common \
    sssd-ldap \
    sudo \
    tk-dev \
    unzip \
    vim \
    wget \
    xz-utils \
    zip \
    zlib1g-dev

# 
# Install Multiple Versions of Python in parallel
# 

FROM base AS python-3.10.16
# Install Python and make it default (used by build scripts)
ARG PYTHON_VERSION=3.10.16
RUN curl -fsSL -O https://cdn.rstudio.com/python/${OS_IDENTIFIER}/pkgs/python-${PYTHON_VERSION}_1_amd64.deb \
    && export DEBIAN_FRONTEND=noninteractive \
    && apt-get install -f -y ./python-${PYTHON_VERSION}_1_amd64.deb \
    && rm python-${PYTHON_VERSION}_1_amd64.deb \
    && /opt/python/${PYTHON_VERSION}/bin/pip install --upgrade pip setuptools wheel

FROM base AS python-3.11.11
ARG PYTHON_VERSION=3.11.11
RUN curl -fsSL -O https://cdn.rstudio.com/python/${OS_IDENTIFIER}/pkgs/python-${PYTHON_VERSION}_1_amd64.deb \
    && export DEBIAN_FRONTEND=noninteractive \
    && apt-get install -f -y ./python-${PYTHON_VERSION}_1_amd64.deb \
    && rm python-${PYTHON_VERSION}_1_amd64.deb \
    && /opt/python/${PYTHON_VERSION}/bin/pip install --upgrade pip setuptools wheel

FROM base AS python-3.12.9
ARG PYTHON_VERSION=3.12.9
RUN curl -fsSL -O https://cdn.rstudio.com/python/${OS_IDENTIFIER}/pkgs/python-${PYTHON_VERSION}_1_amd64.deb \
    && export DEBIAN_FRONTEND=noninteractive \
    && apt-get install -f -y ./python-${PYTHON_VERSION}_1_amd64.deb \
    && rm python-${PYTHON_VERSION}_1_amd64.deb \
    && /opt/python/${PYTHON_VERSION}/bin/pip install --upgrade pip setuptools wheel

# 
# Install Multiple Versions of R in parallel
# 

# Install R versions
FROM base AS r-4.1.3
ARG R_VERSION=4.1.3
RUN curl -O https://cdn.rstudio.com/r/${OS_IDENTIFIER}/pkgs/r-${R_VERSION}_1_amd64.deb \
    && apt-get install -y ./r-${R_VERSION}_1_amd64.deb \
    && rm ./r-${R_VERSION}_1_amd64.deb

FROM base AS r-4.2.3
ARG R_VERSION=4.2.3
RUN curl -O https://cdn.rstudio.com/r/${OS_IDENTIFIER}/pkgs/r-${R_VERSION}_1_amd64.deb \
    && apt-get install -y ./r-${R_VERSION}_1_amd64.deb \
    && rm ./r-${R_VERSION}_1_amd64.deb

FROM base AS r-4.3.3
ARG R_VERSION=4.3.3
RUN curl -O https://cdn.rstudio.com/r/${OS_IDENTIFIER}/pkgs/r-${R_VERSION}_1_amd64.deb \
    && apt-get install -y ./r-${R_VERSION}_1_amd64.deb \
    && rm ./r-${R_VERSION}_1_amd64.deb

FROM base AS r-4.4.2
ARG R_VERSION=4.4.2
RUN curl -O https://cdn.rstudio.com/r/${OS_IDENTIFIER}/pkgs/r-${R_VERSION}_1_amd64.deb \
    && apt-get install -y ./r-${R_VERSION}_1_amd64.deb \
    && rm ./r-${R_VERSION}_1_amd64.deb

# 
# Install Multiple Versions of Quarto in parallel
# 

FROM base AS quarto-1.4.556
ENV QUARTO_VERSION=1.4.556
ARG GH_DOWNLOAD_TOKEN
RUN mkdir -p /opt/quarto/${QUARTO_VERSION} \
    && curl -H "Authorization: token ${GH_DOWNLOAD_TOKEN}" -fSL -o quarto.tar.gz \
    "https://github.com/quarto-dev/quarto-cli/releases/download/v${QUARTO_VERSION}/quarto-${QUARTO_VERSION}-linux-amd64.tar.gz" \
    && file quarto.tar.gz | grep 'gzip compressed data' \
    && tar -zxvf quarto.tar.gz -C "/opt/quarto/${QUARTO_VERSION}" --strip-components=1 \
    && rm quarto.tar.gz

FROM base AS quarto-1.5.52
ENV QUARTO_VERSION=1.5.52
ARG GH_DOWNLOAD_TOKEN
RUN mkdir -p /opt/quarto/${QUARTO_VERSION} \
    && curl -H "Authorization: token ${GH_DOWNLOAD_TOKEN}" -fSL -o quarto.tar.gz \
    "https://github.com/quarto-dev/quarto-cli/releases/download/v${QUARTO_VERSION}/quarto-${QUARTO_VERSION}-linux-amd64.tar.gz" \
    && file quarto.tar.gz | grep 'gzip compressed data' \
    && tar -zxvf quarto.tar.gz -C "/opt/quarto/${QUARTO_VERSION}" --strip-components=1 \
    && rm quarto.tar.gz

FROM base AS quarto-1.6.42
ENV QUARTO_VERSION=1.6.42
ARG GH_DOWNLOAD_TOKEN
RUN mkdir -p /opt/quarto/${QUARTO_VERSION} \
    && curl -H "Authorization: token ${GH_DOWNLOAD_TOKEN}" -fSL -o quarto.tar.gz \
    "https://github.com/quarto-dev/quarto-cli/releases/download/v${QUARTO_VERSION}/quarto-${QUARTO_VERSION}-linux-amd64.tar.gz" \
    && file quarto.tar.gz | grep 'gzip compressed data' \
    && tar -zxvf quarto.tar.gz -C "/opt/quarto/${QUARTO_VERSION}" --strip-components=1 \
    && rm quarto.tar.gz

FROM base AS quarto-1.7.6
ENV QUARTO_VERSION=1.7.6
ARG GH_DOWNLOAD_TOKEN
RUN mkdir -p /opt/quarto/${QUARTO_VERSION} \
    && curl -H "Authorization: token ${GH_DOWNLOAD_TOKEN}" -fSL -o quarto.tar.gz \
    "https://github.com/quarto-dev/quarto-cli/releases/download/v${QUARTO_VERSION}/quarto-${QUARTO_VERSION}-linux-amd64.tar.gz" \
    && file quarto.tar.gz | grep 'gzip compressed data' \
    && tar -zxvf quarto.tar.gz -C "/opt/quarto/${QUARTO_VERSION}" --strip-components=1 \
    && rm quarto.tar.gz

FROM base AS final-stage
# Copy in our installed Python versions
ARG PYTHON_VERSION=3.10.16
COPY --from=python-3.10.16 /opt/python/3.10.16 /opt/python/3.10.16
ARG PYTHON_VERSION=3.11.11
COPY --from=python-3.11.11 /opt/python/3.11.11 /opt/python/3.11.11
ARG PYTHON_VERSION=3.12.9
COPY --from=python-3.12.9 /opt/python/3.12.9 /opt/python/3.12.9
# Use the last version installed AS our default
RUN ln -s /opt/python/3.10.16/bin/python /usr/local/bin/python3

# Copy in our installed R versions
ARG R_VERSION=4.1.3
COPY --from=r-4.1.3 /opt/R/4.1.3 /opt/R/4.1.3
ARG R_VERSION=4.2.3
COPY --from=r-4.2.3 /opt/R/4.2.3 /opt/R/4.2.3
ARG R_VERSION=4.3.3
COPY --from=r-4.3.3 /opt/R/4.3.3 /opt/R/4.3.3
ARG R_VERSION=4.4.2
COPY --from=r-4.4.2 /opt/R/4.4.2 /opt/R/4.4.2

# Symlink default (4.1.3) into path location
ARG R_VERSION=4.1.3
RUN ln -s /opt/R/4.1.3/bin/R /usr/local/bin/R \
    && ln -s /opt/R/4.1.3/bin/Rscript /usr/local/bin/Rscript

# Copy in our installed Quarto versions
ARG QUARTO_VERSION=1.4.556
COPY --from=quarto-1.4.556 /opt/quarto/1.4.556 /opt/quarto/1.4.556
ARG QUARTO_VERSION=1.5.52
COPY --from=quarto-1.5.52 /opt/quarto/1.5.52 /opt/quarto/1.5.52
ARG QUARTO_VERSION=1.6.42
COPY --from=quarto-1.6.42 /opt/quarto/1.6.42 /opt/quarto/1.6.42
ARG QUARTO_VERSION=1.7.6
COPY --from=quarto-1.7.6 /opt/quarto/1.7.6 /opt/quarto/1.7.6

# symlink the earliest into the path location
ARG QUARTO_VERSION=1.4.556
RUN ln -s /opt/quarto/${QUARTO_VERSION}/bin/quarto /usr/bin/quarto

# clean up from our apt-update
RUN rm -rf /var/lib/apt/lists/*
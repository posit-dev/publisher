alias c := clean
alias i := install
alias t := test

# RUNNER_OS from gh actions for windows tests
export RUNNER_OS := env_var_or_default("RUNNER_OS", "local")

_ci := env_var_or_default("CI", "false")

_debug := env_var_or_default("DEBUG", "false")

_with_debug := if _debug == "true" {
        "set -x pipefail"
    } else {
        ""
    }

default:
    #!/usr/bin/env bash
    set -eou pipefail
    {{ _with_debug }}

    just install
    just init
    just test

# Deletes ephemeral project files (i.e., cleans the project).
clean:
    #!/usr/bin/env bash
    set -eou pipefail
    {{ _with_debug }}

    rm -rf node_modules

fix:
    #!/usr/bin/env bash
    set -eou pipefail
    {{ _with_debug }}

    npm run fix

lint:
    #!/usr/bin/env bash
    set -eou pipefail
    {{ _with_debug }}

    npm run lint

# Install dependencies
install:
    #!/usr/bin/env bash
    set -eou pipefail
    {{ _with_debug }}

    npm install

    if ! ./node_modules/.bin/cypress verify &>/dev/null; then
        ./node_modules/.bin/cypress install
    fi

# Executes commands via `npm`. Equivalent to `npm run`. Provides arbitrary command chaining inside of Docker from project root (i.e., `just cy run test`)
run *args:
    #!/usr/bin/env bash
    set -eou pipefail
    {{ _with_debug }}

    npm run {{ args }}

init *args:
    #!/usr/bin/env bash
    set -eou pipefail
    {{ _with_debug }}

    npm run init

# Executes Cypress tests
test:
    #!/usr/bin/env bash
    set -eou pipefail
    {{ _with_debug }}

    npm test

fuzzbucket-start:
    #!/usr/bin/env bash
    set -eou pipefail
    pip install -r ../setup/requirements.txt
    python ../setup/connect_setup.py

fuzzbucket-stop:
    #!/usr/bin/env bash
    set -eou pipefail
    pip install -r ../setup/requirements.txt
    fuzzbucket-client rm connect-publishing-client

test-deploy:
    #!/usr/bin/env bash
    set -eou pipefail
    {{ _with_debug }}
    pip install -r ../setup/requirements.txt
    export CONNECT_SERVER="$(python ../setup/connect_setup.py)"
    export CONNECT_API_KEY="$(python ../setup/gen_apikey.py 'admin')"
    export CYPRESS_CONNECT_ADDRESS="${CONNECT_SERVER}"
    if [[ ${RUNNER_OS} =~ "Windows" ]]; then \
        npm run test-deploy-windows
    else
        npm run test-deploy
    fi

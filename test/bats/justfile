alias c := clean
alias i := install
alias t := test

export CONTENT := env_var_or_default("CONTENT", "all")
export CONTENT_REPO := env_var_or_default("CONTENT_REPO", "/work/connect-content")

export _ci := env_var_or_default("CI", "false")

_debug := env_var_or_default("DEBUG", "false")

_with_debug := if _debug == "true" {
        "set -x pipefail"
    } else {
        ""
    }

default:
    #!/usr/bin/env bash
    set -eou pipefail
    {{ _with_debug }}

    just install
    just test

# Deletes ephemeral project files (i.e., cleans the project).
clean:
    #!/usr/bin/env bash
    set -eou pipefail
    {{ _with_debug }}

    rm -rf node_modules


# Install dependencies
install:
    #!/usr/bin/env bash
    set -eou pipefail
    {{ _with_debug }}

    npm install

# Executes commands via `npm`. Equivalent to `npm run`. Provides arbitrary command chaining inside of Docker from project root (i.e., `just bats run test`)
run *args:
    #!/usr/bin/env bash
    set -eou pipefail
    {{ _with_debug }}

    npm run {{ args }}


# Executes bats deploy tests
# Content being tested lives in the connect-content githu repo
test-contract:
    #!/usr/bin/env bash
    set -eou pipefail
    {{ _with_debug }}

    exe=$(just ../../executable-path)
    
    pip install -r ../setup/requirements.txt

    export CONNECT_SERVER="$(python ../setup/connect_setup.py)"
    export CONNECT_API_KEY="$(python ../setup/gen_apikey.py 'admin')"
    
    if [ ! -f $exe ]; then
        echo "error: Missing executable $exe. Run \`just build\`." 1>&2
        exit 1
    fi
    
    # run contract/accounts.bats
    EXE=$exe npm run accounts

    # pull the content from connect-content repo
    if [[ "${CONTENT}" == "all" ]]; then
        if [[ ${_ci} == false ]]; then
            mkdir -p ../content/bundles/
            cp -R ${HOME}${CONTENT_REPO}/bundles/ ../content/bundles/
        fi
        
        # content_list will contain all content in
        content_list=$(find "../content/bundles" -maxdepth 1 -type d -exec basename {} \;)
        # IFS=' ' read -ra my_array <<< "${content_list}"
        for i in ${content_list}
        do
            # only test when we have a .publisher-env file for the content
            if [[ -f ../content/bundles/${i}/test/.publisher-env ]]; then
                export CONTENT=${i}
                EXE=$exe npm run deploy
            fi
        done
        # rm -rf ../content/
    else
        cp -R "${HOME}${CONTENT_REPO}/bundles/${CONTENT}" ../content/
        EXE=$exe npm run deploy
    fi

# Executes bats local tests
test:
    #!/usr/bin/env bash
    set -eou pipefail
    {{ _with_debug }}

    exe=$(just ../../executable-path)

    if [ ! -f $exe ]; then
        echo "error: Missing executable $exe. Run \`just build\`." 1>&2
        exit 1
    fi
    
    EXE=$exe npm run cli
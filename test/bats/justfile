alias c := clean
alias i := install
alias t := test

export CONTENT := env_var_or_default("CONTENT", "all")
export CONTENT_REPO := env_var_or_default("CONTENT_REPO", "/work/connect-content")
export DOCKER_CONNECT := env_var_or_default("DOCKER_CONNECT", "false")
export QUARTO_VERSION := env_var_or_default("QUARTO_VERSION", "1.4.549")
export PYTHON_VERSION := env_var_or_default("PYTHON_VERSION", "3.12.1")
export _ci := env_var_or_default("CI", "false")

_debug := env_var_or_default("DEBUG", "false")

_with_debug := if _debug == "true" {
        "set -x pipefail"
    } else {
        ""
    }

default:
    #!/usr/bin/env bash
    set -eou pipefail
    {{ _with_debug }}

    just install
    just test

# Deletes ephemeral project files (i.e., cleans the project).
clean:
    #!/usr/bin/env bash
    set -eou pipefail
    {{ _with_debug }}

    rm -rf node_modules

docker-build:
    #!/usr/bin/env bash
    set -eou pipefail
    {{ _with_debug }}
    docker build -t connect ./ --build-arg QUARTO_VERSION=${QUARTO_VERSION} --build-arg PYTHON_VERSION=${PYTHON_VERSION} --build-arg CONNECT_LICENSE=${CONNECT_LICENSE}

# Install dependencies
install:
    #!/usr/bin/env bash
    set -eou pipefail
    {{ _with_debug }}

    npm install

fuzzbucket-start:
    #!/usr/bin/env bash
    set -eou pipefail
    pip install -r ../setup/requirements.txt
    python ../setup/connect_setup.py

fuzzbucket-stop:
    #!/usr/bin/env bash
    set -eou pipefail
    pip install -r ../setup/requirements.txt
    fuzzbucket-client rm connect-publishing-client

# Executes commands via `npm`. Equivalent to `npm run`. Provides arbitrary command chaining inside of Docker from project root (i.e., `just bats run test`)
run *args:
    #!/usr/bin/env bash
    set -eou pipefail
    {{ _with_debug }}

    npm run {{ args }}

# this can run deploy or content tests
test *args:
    #!/usr/bin/env bash
    set -eou pipefail
    {{ _with_debug }}

    ../scripts/test-runner.bash {{ args }}

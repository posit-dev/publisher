name: Nightly
on:
  workflow_call:
    inputs:
      job:
        required: true
        type: string

jobs:
  bats-tests:
    if: ${{ github.event_name == 'schedule' || github.event.inputs.job == 'all' || github.event.inputs.job == 'bats-tests' }}
    env:
      FUZZBUCKET_SSH_KEY: ${{ secrets.FUZZBUCKET_SSH_KEY }}
      FUZZBUCKET_URL: ${{ secrets.FUZZBUCKET_URL }}
      FUZZBUCKET_CREDENTIALS: ${{ secrets.FUZZBUCKET_CREDENTIALS }}
      CI: true
    strategy:
      fail-fast: false
      matrix:
        runs-on: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup
      - name: python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.0
      - name: quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: 1.4.549

      - uses: actions/download-artifact@v4
        with:
          name: bin
          path: bin
      - uses: actions/checkout@v4
        with:
          repository: rstudio/connect-content
          path: "test/content"
          sparse-checkout: bundles
          sparse-checkout-cone-mode: false
          token: ${{ secrets.CONNECT_PAT }}

      - name: Install deps on ubuntu
        run: |
          sudo apt-get install libcurl4-openssl-dev libsodium-dev libfontconfig1-dev libfribidi-dev libfontconfig1-dev libpng-dev
          R -e "install.packages('renv', repos='https://packagemanager.posit.co/cran/latest')"
        if: matrix.runs-on == 'ubuntu-latest'
      - name: Install deps on windows
        run: |
          R.exe -e "install.packages('renv', repos='https://packagemanager.posit.co/cran/latest')"
        if: matrix.runs-on == 'windows-latest'
      - name: Install deps on macos
        run: |
          R -e "install.packages('renv', repos='https://packagemanager.posit.co/cran/latest')"
        if: matrix.runs-on == 'macos-latest'

      - run: chmod -R +x ./bin
      - run: echo "${FUZZBUCKET_SSH_KEY}" > test/setup/fuzzbucket-ssh-key && chmod 600 test/setup/fuzzbucket-ssh-key
      - run: just bats install
      - run: just bats test common
      - run: just bats test init
      - run: just bats test deploy

  vscode-ui-tests:
    if: ${{ github.event_name == 'schedule' || github.event.inputs.job == 'all' || github.event.inputs.job == 'vscode-ui-tests' }}
    env:
      FUZZBUCKET_SSH_KEY: ${{ secrets.FUZZBUCKET_SSH_KEY }}
      FUZZBUCKET_URL: ${{ secrets.FUZZBUCKET_URL }}
      FUZZBUCKET_CREDENTIALS: ${{ secrets.FUZZBUCKET_CREDENTIALS }}
      CI: true

    strategy:
      fail-fast: false
      matrix:
        runs-on: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup

      - name: setup-chromedriver
        uses: nanasess/setup-chromedriver@v2.2.2

      - name: python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.0
      - name: quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: 1.4.549

      - uses: actions/download-artifact@v4
        with:
          name: bin
          path: bin

      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - uses: actions/checkout@v4
        with:
          repository: rstudio/connect-content
          path: "test/content"
          sparse-checkout: bundles
          sparse-checkout-cone-mode: false
          token: ${{ secrets.CONNECT_PAT }}

      - name: Extract dist on ubuntu
        run: |
          unzip dist/*-linux-amd64.vsix -d dist/ext
        if: matrix.runs-on == 'ubuntu-latest'
      - name: Extract dist on windows
        run: |
          7z x -y dist/*-windows-amd64.vsix -odist/ext
        if: matrix.runs-on == 'windows-latest'
      - name: Extract dist on macos
        run: |
          unzip dist/*-darwin-arm64.vsix -d dist/ext
        if: matrix.runs-on == 'macos-latest'
      - run: chmod -R +x ./bin
      - run: echo "${FUZZBUCKET_SSH_KEY}" > test/setup/fuzzbucket-ssh-key && chmod 600 test/setup/fuzzbucket-ssh-key

      # vscode ui tests
      - run: just vscode configure
      - run: just vscode-ui install
      - run: python --version

      - name: Run root tests
        run: just vscode-ui test vscode-root

      - name: Run nested tests
        run: just vscode-ui test vscode-nested

      - name: Save screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: ${{ matrix.runs-on }}-screenshots
          path: test/vscode-ui/errorShots
          if-no-files-found: ignore
          retention-days: 1

      # - name: Setup tmate session
      #   if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     limit-access-to-actor: true

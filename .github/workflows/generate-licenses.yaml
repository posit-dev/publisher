name: Generate Licenses
on:
  workflow_call:
    inputs:
      commit_changes:
        description: "Whether to commit license changes if found"
        required: false
        default: false
        type: boolean
    outputs:
      has-changes:
        description: "Whether license changes were detected"
        value: ${{ jobs.license-check.outputs.has-changes }}

permissions:
  contents: write

jobs:
  license-check:
    runs-on: ubuntu-latest
    outputs:
      has-changes: ${{ steps.check-changes.outputs.has_changes }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup

      # We need to prepare the environment for license generation to ensure all required license directories exist
      # Create vendor directory with Go dependencies
      - run: go mod vendor

      # Create VSCode extension's node_modules directories
      - run: just extensions/vscode deps

      # Generate licenses and check for forbidden licenses
      - name: Generate licenses
        id: generate-licenses
        shell: bash
        run: just docs/licenses
        # Note: The script will automatically:
        # - Fail if required directories are missing
        # - Fail if forbidden licenses are found

      # Format the licenses file for consistency
      - name: Format licenses file
        shell: bash
        run: just format

      # Check if changes were made to the licenses file
      - name: Check if changes exist
        id: check-changes
        shell: bash
        run: |
          git add docs/licenses.md
          if ! git diff --staged --quiet; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Show changes
        if: success() && steps.check-changes.outputs.has_changes == 'true'
        run: |
          echo "License changes detected:"
          git diff --staged

      - name: Report no changes
        if: success() && steps.check-changes.outputs.has_changes != 'true'
        run: echo "No changes detected in licenses file. Nothing to commit."

      # Conditional commit step based on input parameter
      - name: Commit license changes
        if: success() && steps.check-changes.outputs.has_changes == 'true' && inputs.commit_changes == true
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git commit -m "Update licenses [skip ci]"
          git push

      - name: Dry run notice
        if: success() && steps.check-changes.outputs.has_changes == 'true' && inputs.commit_changes == false
        run: |
          echo "Changes were detected but not committed due to commit_changes=false setting."
